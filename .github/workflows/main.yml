name: Band Auto Posting

on:
  workflow_dispatch:  # 수동 실행 가능
  schedule:
    - cron: '0 */1 * * *'  # 매 시간마다 실행

jobs:
  post:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip shadowsocks-libev
        pip install selenium requests beautifulsoup4 webdriver_manager
        
    - name: Setup VPN
      run: |
        echo '{
          "server":"34.64.189.76",
          "server_port":16978,
          "password":"Nsy5l8wxxzHg4CXPKwEw6S",
          "method":"chacha20-ietf-poly1305",
          "local_address":"127.0.0.1",
          "local_port":1080
        }' > ss-config.json
        ss-local -c ss-config.json -v &
        sleep 5
        curl --socks5 127.0.0.1:1080 http://ip-api.com/json
        
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@latest
      
    - name: Check Directory Structure
      run: |
        pwd
        echo "현재 작업 디렉토리 구조:"
        ls -la
        
    - name: Extract Chrome Profile
      run: |
        echo "Chrome 프로필 압축 해제 중..."
        mkdir -p chrome-profile
        unzip -o "chrome_profile.zip" -d ./chrome-profile || {
          echo "chrome_profile.zip 파일을 찾을 수 없습니다."
          echo "현재 폴더 내용:"
          ls -la
          exit 1
        }
        echo "Chrome 프로필 압축 해제 완료"
        
    - name: Run Auto Posting
      run: |
        echo "=== 밴드 자동 포스팅 시작 ==="
        
        # 로그 파일 초기화
        echo "작업 시작 시간: $(date '+%Y-%m-%d %H:%M:%S')" > band_auto.log
        
        # 실시간 모니터링 스크립트
        PYTHONUNBUFFERED=1 python auto_band_action.py 2>&1 | while IFS= read -r line; do
          timestamp=$(date '+%Y-%m-%d %H:%M:%S')
          
          # 상세한 단계별 진행 상황 모니터링
          case "$line" in
            *"VPN 상태"*|*"현재 IP"*|*"국가"*|*"ISP"*)
              echo "========== VPN 연결 상태 =========="
              echo "[$timestamp] $line"
              echo "==================================="
              ;;
              
            *"Chrome driver"*|*"Driver setup"*)
              echo "========= 드라이버 초기화 ========="
              echo "[$timestamp] $line"
              echo "==================================="
              ;;
              
            *"로그인 시작"*|*"로그인 페이지"*)
              echo "🔐 ====== 로그인 프로세스 시작 ======"
              echo "[$timestamp] $line"
              ;;
              
            *"이메일 입력"*)
              echo "✉️ 이메일 입력 단계"
              echo "[$timestamp] $line"
              ;;
              
            *"비밀번호 입력"*)
              echo "🔑 비밀번호 입력 단계"
              echo "[$timestamp] $line"
              ;;
              
            *"로그인 성공"*)
              echo "✅ 로그인 완료"
              echo "[$timestamp] $line"
              echo "===================================="
              ;;
              
            *"현재 작업 중인 URL"*)
              echo "🔗 ======= URL 작업 정보 ========"
              echo "[$timestamp] $line"
              ;;
              
            *"밴드로 이동"*|*"URL 주소:"*)
              echo "🌐 현재 페이지 이동"
              echo "[$timestamp] $line"
              ;;
              
            *"글쓰기 버튼"*)
              echo "📝 포스팅 작성 시작"
              echo "[$timestamp] $line"
              ;;
              
            *"URL 입력 중"*)
              echo "⌨️ URL 입력"
              echo "[$timestamp] $line"
              ;;
              
            *"미리보기 로딩"*)
              echo "⏳ 미리보기 로딩"
              echo "[$timestamp] $line"
              ;;
              
            *"포스팅 완료"*)
              echo "✅ ======= 포스팅 완료 ========"
              echo "[$timestamp] $line"
              echo "================================"
              ;;
              
            *"실패"*|*"오류"*)
              echo "❌ ======= 오류 발생 ========"
              echo "[$timestamp] $line"
              echo "=============================="
              ;;
              
            *"대기 시작"*|*"남은 시간"*)
              echo "⏰ 대기 상태"
              echo "[$timestamp] $line"
              ;;
              
            *)
              echo "[$timestamp] $line"
              ;;
          esac
          
          # 로그 파일에도 저장
          echo "[$timestamp] $line" >> band_auto.log
          
        done

        echo -e "\n=== 실행 통계 생성 ==="
        {
          echo "1. 로그인 프로세스"
          echo "- 시도 횟수: $(grep -c "로그인 시작" band_auto.log)"
          echo "- 성공 횟수: $(grep -c "로그인 성공" band_auto.log)"
          
          echo -e "\n2. URL 작업 현황"
          echo "- 처리된 URL 수: $(grep -c "현재 작업 중인 URL" band_auto.log)"
          echo "- 페이지 이동 수: $(grep -c "밴드로 이동" band_auto.log)"
          
          echo -e "\n3. 포스팅 통계"
          echo "- 글쓰기 시도: $(grep -c "글쓰기 버튼" band_auto.log)"
          echo "- 포스팅 성공: $(grep -c "포스팅 완료" band_auto.log)"
          echo "- 실패/오류: $(grep -c "실패\|오류" band_auto.log)"
          
          echo -e "\n4. 상세 URL 기록"
          echo "처리된 URL 목록:"
          grep "URL 주소:" band_auto.log
          
          echo -e "\n5. 마지막 작업 상태"
          tail -n 20 band_auto.log
          
        } | tee execution_summary.txt

      env:
        CHROME_PROFILE_PATH: "./chrome-profile"
        ALL_PROXY: "socks5://127.0.0.1:1080"
        PYTHONUNBUFFERED: 1
        TZ: 'Asia/Seoul'
